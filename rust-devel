#!/bin/bash

set -e -u

DIR="$(dirname "$0")"
FILE_BASE="$DIR"
ARGS="$@"

function wait_for_changes() {
    inotifywait -q -e modify -r "$FILE_BASE/src" "$FILE_BASE/Cargo.toml" "$FILE_BASE/build.rs"
}

function start_server() {
    (
        cd "$FILE_BASE"
        # Because Emacs runs cargo as well, this cargo will wait for the other
        # cargo to finish. I don't want to wait, so I kill the other rustc process.
        killall rustc &> /dev/null || true
        while ! (cargo build $ARGS); do
            wait_for_changes
            sleep 1
        done
    )
    cargo run &
    PID=$!
    echo "rust server started ($PID)"
}

function stop_server() {
    if test -n "$PID"; then
        kill "$PID"
        echo "Killed old server"
    fi
}

cd "$FILE_BASE"

start_server "$@"

trap stop_server INT

while wait_for_changes; do
    echo "changes detected; restarting rust server ($PID)"
    stop_server
    sleep 0.5
    echo "####" $(date)
    start_server "$@"
done

